{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/PanelMembers.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","IndexPage","a","createElement","title","href","data-patreon-widget-type","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","func","HeaderImage","gatsby_browser_entry_StaticQuery","gatsby_image_default","fluid","placeholderImage","childImageSharp","_741248283","TitleLink","styled","Link","withConfig","displayName","componentId","Container","header","HeaderBody","div","HeaderText","h1","Header","siteTitle","to","header_HeaderImage","PanelMember","twitter","PanelMemberList","_ref2","members","map","PanelMembers_PanelMember","key","node","id","PanelMembers","console","log","PanelMembers_PanelMemberList","allPanelistsJson","edges","_764686122","components_PanelMembers","PanelMembers_PanelMembers","MainPage","Layout","Fragment","Date","getFullYear","_755544856"],"mappings":"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","file":"component---src-pages-index-js-e8bc5f2fa6d1dfd268e1.js","sourcesContent":["import React from \"react\"\n// import { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <a\n      href=\"https://www.patreon.com/bePatron?u=10262003\"\n      data-patreon-widget-type=\"become-patron-button\"\n    >\n      Throw us a few bones & support the show\n    </a>\n    {/* <Link to=\"/page-2/\">Go to page 2</Link> */}\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nconst HeaderImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"crow.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\n\nconst TitleLink = styled(Link)`\n  color: #111111;\n  font-family: \"Ultra\";\n  text-transform: uppercase;\n  font-weight: normal;\n  text-decoration: none;\n`\n\nconst Container = styled.header`\n  background-color: #ffbd3a;\n  margin-bottom: 1.45rem;\n`\n\nconst HeaderBody = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  > div {\n    flex: 1;\n    max-width: 200px;\n  }\n`\n\nconst HeaderText = styled.h1`\n  max-width: 50%;\n`\n\nconst Header = ({ siteTitle }) => (\n  <Container>\n    <HeaderBody>\n      <HeaderText>\n        <TitleLink to=\"/\">{siteTitle}</TitleLink>\n      </HeaderText>\n      <HeaderImage />\n    </HeaderBody>\n  </Container>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { StaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { map } from \"lodash/fp\"\n\nconst PanelMember = ({ name, twitter }) => (\n  <div>\n    {name} {twitter}\n  </div>\n)\n\nconst PanelMemberList = ({ members }) =>\n  map(data => <PanelMember key={data.node.id} {...data.node} />, members)\n\nconst PanelMembers = () =>\n  console.log(\"here\") || (\n    <StaticQuery\n      query={graphql`\n        query SomeQuery {\n          allPanelistsJson {\n            edges {\n              node {\n                id\n                name\n                twitter\n              }\n            }\n          }\n        }\n      `}\n      render={data => <PanelMemberList members={data.allPanelistsJson.edges} />}\n    />\n  )\n\nexport default () => (\n  <div>\n    <PanelMembers />\n  </div>\n)\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Header from \"./header\"\nimport PanelMembers from \"./PanelMembers\"\nimport \"./layout.css\"\n\nconst MainPage = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0px 1.0875rem 1.45rem;\n  padding-top: 0;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <MainPage>\n          <main>\n            <PanelMembers />\n            {children}\n          </main>\n          <footer>\n            © {new Date().getFullYear()}, Crypto Weekly and the Lads\n          </footer>\n        </MainPage>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}